import funkin.scripting.classes.ScriptedStage;

import funkin.data.ClientPrefs;
import funkin.objects.BGSprite;


class spooky extends ScriptedStage 
{

    var halloweenBG:FlxSprite = null;
    var halloweenWhite:BGSprite = null;


    var lightningStrikeBeat:Int = 0;
    var lightningOffset:Int = 8;

    public function new()
    {
        super();
    }

    override function onCreate()
    {

        if(!ClientPrefs.lowQuality) 
        {
            halloweenBG = new BGSprite('week2/halloween_bg', -200, -100, 1,1,['halloweem bg0', 'halloweem bg lightning strike']);
        } 
        else 
        {
            halloweenBG = new BGSprite('week2/halloween_bg_low', -200, -100,1,1);
        }
        
        add(halloweenBG);
        halloweenBG.scale.x *= 1.1;
        halloweenBG.scale.y *= 1.1;
    
        halloweenWhite = new BGSprite(null, -800, -400, 0, 0);
        halloweenWhite.makeScaledGraphic(Std.int(FlxG.width * 2), Std.int(FlxG.height * 2), FlxColor.WHITE);
        halloweenWhite.alpha = 0;
        halloweenWhite.blend = BlendMode.ADD;
        add(halloweenWhite);

        halloweenWhite.zIndex = 10;


        game.gfGroup.zIndex = 5;
        game.dadGroup.zIndex = 6;
        game.boyfriendGroup.zIndex = 7;


        Paths.sound('thunder_1');
		Paths.sound('thunder_2');

        if (PlayState.isStoryMode && !PlayState.seenCutscene)
        {
            if (PlayState.SONG.song.toLowerCase() == 'monster')
            {
                game.songStartCallback = monsterIntro;
            }
        }


    }




    function onBeatHit()
    {

        if(FlxG.random.bool(10) && game.curBeat > lightningStrikeBeat + lightningOffset)
            lightningStrikeShit();
    }

    function lightningStrikeShit()
    {
        FlxG.sound.play(Paths.sound("thunder_" + FlxG.random.int(1,2)));
        if(!ClientPrefs.lowQuality) halloweenBG.animation.play('halloweem bg lightning strike');
    
        lightningStrikeBeat = game.curBeat;
        lightningOffset = FlxG.random.int(8, 24);
    
        if(boyfriend.animOffsets.exists('scared'))
        {
            boyfriend.playAnim('scared', true);
        }

        if(gf.animOffsets.exists('scared'))
        {
            gf.playAnim('scared', true);
        }

        if(ClientPrefs.camZooms) 
        {
			FlxG.camera.zoom += 0.015;
			game.camHUD.zoom += 0.03;

			if(!game.camZooming) 
            { 
				FlxTween.tween(FlxG.camera, {zoom: game.defaultCamZoom}, 0.5);
				FlxTween.tween(game.camHUD, {zoom: 1}, 0.5);
			}
		}
    
        if(ClientPrefs.flashing) 
        {
            halloweenWhite.alpha = 0.4;
            FlxTween.tween(halloweenWhite, {alpha: 0.5}, 0.075);
            FlxTween.tween(halloweenWhite, {alpha: 0}, 0.25, {startDelay: 0.15});
        }
    }

    function monsterIntro()
    {
        game.inCutscene = true;
        game.camHUD.visible = false;

        game.snapCamFollowToPos(dad.getMidpoint().x + 150, dad.getMidpoint().y - 100);


        // character anims
        FlxG.sound.play(Paths.sound('thunder_' + FlxG.random.int(1,2)));
        if(gf != null) gf.playAnim('scared', true);
        boyfriend.playAnim('scared', true);

        // white flash
        var whiteScreen:FlxSprite = new FlxSprite().makeScaledGraphic(Std.int(FlxG.width * 2), Std.int(FlxG.height * 2), FlxColor.WHITE);
        whiteScreen.scrollFactor.set();
        whiteScreen.blend = BlendMode.ADD;
        add(whiteScreen);
        FlxTween.tween(whiteScreen, {alpha: 0}, 1, {
            startDelay: 0.1,
            ease: FlxEase.linear,
            onComplete: function(twn:FlxTween)
            {
                remove(whiteScreen);
                whiteScreen.destroy();

                game.camHUD.visible = true;
                game.startCountdown();
            }
        });
    }



}